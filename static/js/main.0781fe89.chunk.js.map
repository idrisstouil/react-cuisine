{"version":3,"sources":["addrecipe.js","editrecipe.js","index.js"],"names":["AddRecipe","props","state","name","ingredients","handleRecipeNameChange","bind","handleRecipeIngredientsChange","handleSubmit","handleCancel","e","this","setState","target","value","preventDefault","onAdd","split","onAddModal","onShow","validRecipe","test","show","onHide","Header","closeButton","Title","Body","controlId","type","required","onChange","placeholder","componentClass","Footer","disabled","bsStyle","onClick","React","Component","EditRecipe","handleEdit","onEdit","currentlyEditing","onEditModal","recipe","join","prevName","prevIngredients","Recipe","recipes","showAdd","showEdit","showAddModal","showEditModal","addRecipe","editRecipe","deleteRecipe","localStorage","JSON","parse","getItem","index","push","setItem","stringify","newName","newIngredients","slice","splice","className","accordion","id","map","style","eventKey","key","Heading","toggle","ingredient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0781fe89.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Modal,ControlLabel,FormGroup,FormControl,Button} from 'react-bootstrap';\r\n\r\nexport class AddRecipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: \"\", ingredients: \"\"};\r\n    this.handleRecipeNameChange = this.handleRecipeNameChange.bind(this);\r\n    this.handleRecipeIngredientsChange = this.handleRecipeIngredientsChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n  handleRecipeNameChange(e) {\r\n    this.setState({name: e.target.value});\r\n  }\r\n  handleRecipeIngredientsChange(e) {\r\n    this.setState({ingredients: e.target.value});\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const onAdd = this.props.onAdd;\r\n    const regExp = /\\s*,\\s*/;\r\n    var newName = this.state.name;\r\n    var newIngredients = this.state.ingredients.split(regExp);\r\n    var newRecipe = {name: newName, ingredients: newIngredients};\r\n    onAdd(newRecipe);\r\n    this.setState({name: \"\", ingredients: \"\"});\r\n  }\r\n  handleCancel() {\r\n    const onAddModal = this.props.onAddModal;\r\n    this.setState({name: \"\", ingredients: \"\"});\r\n    onAddModal();\r\n  }\r\n  render() {\r\n    const onShow = this.props.onShow;\r\n    var regex1 = /^\\S/;\r\n    var regex2 = /^[^,\\s]/;\r\n   var regex3 = /[^,\\s]$/;\r\n    const validRecipe = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\r\n    return(\r\n      <Modal show={onShow} onHide={this.handleCancel}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>nouvelle recette</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormGroup controlId=\"formControlsName\">\r\n            <ControlLabel>nom du recette</ControlLabel>\r\n            <FormControl type=\"text\" required onChange={this.handleRecipeNameChange} value={this.state.name} placeholder=\"Enter Name\" />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsIngredients\">\r\n            <ControlLabel>ingredients du recette</ControlLabel>\r\n            <FormControl componentClass=\"textarea\" type=\"text\" required onChange={this.handleRecipeIngredientsChange} value={this.state.ingredients} placeholder=\"saisie les ingredients(une commas entre chaque ingredient)\" />\r\n          </FormGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button disabled={!validRecipe} bsStyle=\"success\" onClick={this.handleSubmit}>sauvgarder la recette</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {Modal,ControlLabel,FormGroup,FormControl,Button} from 'react-bootstrap';\r\n\r\nexport class EditRecipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: \"\", ingredients: \"\"};\r\n    this.handleRecipeNameChange = this.handleRecipeNameChange.bind(this);\r\n    this.handleRecipeIngredientsChange = this.handleRecipeIngredientsChange.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    const prevName = state.prevName;\r\n    const prevIngredients = state.prevIngredients;\r\n    const name = prevName !== props.recipe.name ? props.recipe.name : state.name;\r\n    const ingredients = prevIngredients !== props.recipe.ingredients.join(\",\") ? props.recipe.ingredients.join(\",\") : state.ingredients;\r\n    return {\r\n      prevName: props.recipe.name, name,\r\n      prevIngredients: props.recipe.ingredients.join(\",\"), ingredients,\r\n    }\r\n  }\r\n  handleRecipeNameChange(e) {\r\n    this.setState({name: e.target.value});\r\n  }\r\n  handleRecipeIngredientsChange(e) {\r\n    this.setState({ingredients: e.target.value});\r\n  }\r\n  handleEdit(e) {\r\n    e.preventDefault();\r\n    const onEdit = this.props.onEdit;\r\n    const currentlyEditing = this.props.currentlyEditing;\r\n    const regExp = /\\s*,\\s*/;\r\n    var name = this.state.name;\r\n    var ingredients = this.state.ingredients.split(regExp);\r\n    onEdit(name, ingredients, currentlyEditing);\r\n  }\r\n  handleCancel() {\r\n    const onEditModal = this.props.onEditModal;\r\n    this.setState({name: this.props.recipe.name, ingredients: this.props.recipe.ingredients.join(\",\")});\r\n    onEditModal();\r\n  }\r\n  render() {\r\n    const onShow = this.props.onShow;\r\n    var regex1 = /^\\S/;\r\n    var regex2 = /^[^,\\s]/;\r\n    var regex3 = /[^,\\s]$/;\r\n    const validRecipe = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\r\n    return(\r\n      <Modal show={onShow} onHide={this.handleCancel}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>modifier la recette</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormGroup controlId=\"formControlsName\">\r\n            <ControlLabel>nom du recette</ControlLabel>\r\n            <FormControl type=\"text\" required onChange={this.handleRecipeNameChange} value={this.state.name} placeholder=\"Enter Name\" />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsIngredients\">\r\n            <ControlLabel>ingrediant du recette</ControlLabel>\r\n            <FormControl componentClass=\"textarea\" type=\"text\" required onChange={this.handleRecipeIngredientsChange} value={this.state.ingredients} placeholder=\"saisie  les ingredients(separer par commas)\" />\r\n          </FormGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button disabled={!validRecipe} bsStyle=\"success\" onClick={this.handleEdit}>sauvgareder la recette</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n};","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PanelGroup,Panel,Button,ButtonToolbar,ListGroup} from 'react-bootstrap';\nimport './index.css';\nimport {AddRecipe} from './addrecipe';\nimport {EditRecipe} from './editrecipe';\n\nclass Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      showAdd: false,\n      showEdit: false,\n      currentlyEditing: 0\n    };\n    this.showAddModal = this.showAddModal.bind(this);\n    this.showEditModal = this.showEditModal.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n    this.editRecipe = this.editRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n  }\n  componentDidMount() {\n    var recipes = (typeof localStorage[\"recipes\"] !== \"undefined\") ? JSON.parse(localStorage.getItem(\"recipes\")) : [\n      \n    ];\n    this.setState({recipes: recipes});\n  }\n  showAddModal() {\n    this.setState({showAdd: !this.state.showAdd});\n  }\n  showEditModal(index) {\n    this.setState({currentlyEditing: index, showEdit: !this.state.showEdit});\n  }\n  addRecipe(recipe) {\n    let recipes = this.state.recipes;\n    recipes.push(recipe);\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n    this.setState({recipes: recipes});\n    this.showAddModal();\n  }\n  editRecipe(newName, newIngredients, currentlyEditing) {\n    let recipes = this.state.recipes;\n    recipes[currentlyEditing] = {name: newName, ingredients: newIngredients};\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n    this.setState({recipes: recipes});\n    this.showEditModal(currentlyEditing);\n  }\n  deleteRecipe(index) {\n    let recipes = this.state.recipes.slice();\n    recipes.splice(index, 1);\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n    this.setState({recipes: recipes, currentlyEditing: 0});\n  }\n  render() {\n    const recipes = this.state.recipes;\n    var currentlyEditing = this.state.currentlyEditing;\n    return(\n      <div className=\"jumbotron\">\n        <h1>mes recettes</h1>\n        <Button bsStyle=\"success\" onClick={this.showAddModal}>ajouter une nouvelle recette</Button>\n        <AddRecipe onShow={this.state.showAdd} onAdd={this.addRecipe} onAddModal={this.showAddModal} />\n        <PanelGroup accordion id=\"recipes\">\n          \n          {recipes.map((recipe, index) => (\n            \n            <Panel className=\"card\" style={{  }} eventKey={index} key={index}>\n             \n             \n              <Panel.Heading>\n                <Panel.Title className=\"title\" toggle>{recipe.name}</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body >\n                <ListGroup className=\"cardc\">\n                  {recipe.ingredients.map((ingredient, index) => (\n                    <div key={index}>{ingredient}</div>\n                  ))}\n                </ListGroup>\n                <ButtonToolbar>\n                  <Button bsStyle=\"info\" onClick={() => {this.showEditModal(index)}}>modifier</Button>\n                  <Button bsStyle=\"danger\" onClick={() => {this.deleteRecipe(index)}}>supprimer</Button>\n                </ButtonToolbar>\n              </Panel.Body>\n              <EditRecipe onShow={this.state.showEdit} onEdit={this.editRecipe} onEditModal={() => {this.showEditModal(currentlyEditing)}} currentlyEditing={currentlyEditing} recipe={recipes[currentlyEditing]} />\n            </Panel>\n          ))}\n        </PanelGroup>\n      \n      </div>\n    );\n  }\n};\n\nReactDOM.render(<Recipe />, document.getElementById('app'));"],"sourceRoot":""}